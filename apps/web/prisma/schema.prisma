generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    email String @unique
    username String @db.VarChar(255)
    photo String? @default("")
    password String
    verified Boolean @default(false)
    createdAt DateTime @default(now())
    tweets Tweet[] @relation("userTweets")
    reTweets ReTweets[] @relation("userReTweets")
    replies Replies[] @relation("userReplies")
    likes Likes[] @relation("userLikes")
}

model Tweet {
  id String @id @default(uuid())
  content String
  createdAt DateTime @default(now())
  userId String
  user User @relation("userTweets", fields: [userId], references: [id])
  reTweets ReTweets[] @relation("reTweet")
  replies Replies[] @relation("replies")
  likes Likes[] @relation("likes")
  reTweetCount Int @default(0)
  RepliesCount Int @default(0)
  Likes Int @default(0)
}

model ReTweets {
  id String @id @default(uuid())
  tweetID String
  tweet Tweet @relation("reTweet", fields: [tweetID], references: [id])
  userId String
  user User @relation("userReTweets", fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Replies {
  id String @id @default(uuid())
  tweetId String
  tweet Tweet @relation("replies", fields: [tweetId], references: [id])
  userId String
  user User @relation("userReplies", fields: [userId], references: [id])
  content String
  createdAt DateTime @default(now())
}

model Likes {
  id String @id @default(uuid())
  tweetId String
  tweet Tweet @relation("likes", fields: [tweetId], references: [id])
  userId String
  user User @relation("userLikes", fields: [userId], references: [id])
}